.\" $FreeBSD$
.\" $Id: pstack.1,v 1.2 2002/10/02 09:53:47 pmedwards Exp $
.\"
.Dd Oct 2, 2002
.Dt PSTACK 1
.Os
.Sh NAME
.Nm pstack
.Nd get stack traces of threads in a running process
.Sh SYNOPSIS
.Nm
.Op Fl a Ar arg-count
.Op Fl e Ar executable-file
.Op Fl f Ar frame-count
.Op Fl n Ar iteration-count
.Op Fl o
.Op Fl O
.Op Fl t
.Op Fl T Ar thread-id
.Op Fl v
.Ar pid | core
.Nm
.Op Fl d Ar elf-file
.Sh DESCRIPTION
Displays the stack traces of each thread in the running process with process
id
.Ar pid
or from the core file
.Ar core
.Pp
Options are as follows:
.Bl -tag -width Fl
.It Fl a Ar arg-count
Attempt to read
.Ar arg-count
word-size arguments from the stack for each frame.
.It Fl f Ar frame-count
Do not attempt to read any more than
.Ar frame-count
stack frames for each stack.
.It Fl d Ar elf-file
Causes
.Nm
to print a dump of the ELF information in an object file,
and exit.
.It Fl e Ar file
Specify an alternate executable to use for locating symbols in the
process.
This is useful if the process was started from a stripped
version of an executable, and you have the unstripped version
available.
If examining a corefile, this argument is required.
.It Fl n Ar iteration-count
Causes
.Nm
to display stack traces
.Ar iteration-count
times
.It Fl o
For each stack frame, display the name of the object in which the current
function lies
.It Fl O
For each stack frame, display the full path to the object in which
the current function lies
.It Fl t
Display the amount of time that the process was suspended by
.Nm
.It Fl T Ar thread-id
Display stack frame only for thread with specified thread ID
.It Fl v
verbose.
Display debugging and diagnostics.
.El
.Sh SEE ALSO
.Xr ptrace 2
.Sh BUGS
.Nm
works only for x86 32/64-bit ELF executables at the moment. (ie, no
a.out support, and no Alpha support).
It is also very dependent on the current FreeBSD threads implementation.
.Sh AUTHORS
Peter Edwards <pmedwards@eircom.net>
